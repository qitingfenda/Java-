保留1位小数:
float num = 10.183456f;
String a = String.format("%.1f",num);

int[] arr = new int[10];
Random ran = new Random();
for(int i = 0;i<arr.length;i++) {
	arr[i] = ran.nextInt(10);
}
System.out.println(Arrays.toString(arr));

s.toCharArray();//将a字符串转换为字符数组
---------------------------------------------
Number&Math:
	Number数据类型的常用方法:
	
	类型转换:
	xxxValue();


//定时器的调用
	Timer timer = new Timer();
	timer.schedule(new TimerTask() {
		public void run() {
			调用体;
		}
	},0,2000);

-----------------------------------------------------
	--正则表达式:"[abc]"表示abc中任意一个字符
	--正则表达式:"[^abc]"表示除了abc的任意字符
	--正则表达式:"[a-z]"表示a到z的任意一个字符
	--正则表达式:"[a-z]+"表示由一个或多个a到z字符组成的字符串
	--正则表达式:"[a-zA-Z0-9]"表示a-z，A-Z，0-9中任意一个字符
	--正则表达式:"[a-z&&[&bc]]"表示a-z中除了bc以外的任意一个字符
	
	预定于字符集
	.  代表任意一个字符
	\d 代表任意一个数字字符
	\w 代表任意一个单词字符
	\s 空白字符
	\D 非数字字符
	\W 非单词字符
	\S 非空白字符
	
	数量词:
	X?		表示0个或1个X
	X*		表示0个或任意多个X
	X+		表示1个到任意多个X(大于等于1)
	X{n}	表示n个X
	X{n,m}	表示n个到m个X
	
	检索手机号码:
	+8612345678910
	+86或+0086可有可无
	+86后面的号码之间空格可以没有可以有多个
	手机号码为11位
	(+\86|\+0086)?\s*\d{11}//java在编译时\需要再转义















